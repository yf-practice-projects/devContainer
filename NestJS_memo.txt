https://zenn.dev/nameless_sn/articles/nestjs-fundamental

project-name/
 ├── node_modules/              # 依存パッケージのフォルダ
 ├── src/                       # ソースコードのルートフォルダ
 |    ├── app.controller.ts     # 基本的なコントローラーファイル
 |    ├── app.module.ts         # アプリケーションのルートモジュールファイル
 |    ├── app.service.ts        # 基本的なサービスファイル
 |    └── main.ts               # アプリケーションのエントリーポイントファイル
 ├── test/                      # テスト関連のファイルを配置するフォルダ
 ├── .gitignore                 # Gitが無視するファイル/ディレクトリのリスト
 ├── nest-cli.json              # Nest CLIの設定ファイル
 ├── package.json               # プロジェクトのメタデータと依存関係が記述されたファイル
 ├── tsconfig.build.json        # TypeScriptのビルド設定ファイル
 ├── tsconfig.json              # TypeScriptのコンパイラ設定ファイル
 └── README.md                  # プロジェクトの説明が書かれたドキュメントファイル

[新規プロジェクト作成]
nest new プロジェクト名

[モジュールやコントローラー作成]
nest generate | g module[or controller] モジュール名
モジュール→コントローラー→サービス
┌───────────────┬─────────────┬──────────────────────────────────────────────┐
│ application   │ application │ Generate a new application workspace         │
│ class         │ cl          │ Generate a new class                         │
│ configuration │ config      │ Generate a CLI configuration file            │
│ controller    │ co          │ Generate a controller declaration            │
│ decorator     │ d           │ Generate a custom decorator                  │
│ filter        │ f           │ Generate a filter declaration                │
│ gateway       │ ga          │ Generate a gateway declaration               │
│ guard         │ gu          │ Generate a guard declaration                 │
│ interceptor   │ itc         │ Generate an interceptor declaration          │
│ interface     │ itf         │ Generate an interface                        │
│ library       │ lib         │ Generate a new library within a monorepo     │
│ middleware    │ mi          │ Generate a middleware declaration            │
│ module        │ mo          │ Generate a module declaration                │
│ pipe          │ pi          │ Generate a pipe declaration                  │
│ provider      │ pr          │ Generate a provider declaration              │
│ resolver      │ r           │ Generate a GraphQL resolver declaration      │
│ resource      │ res         │ Generate a new CRUD resource                 │
│ service       │ s           │ Generate a service declaration               │
│ sub-app       │ app         │ Generate a new application within a monorepo │
└───────────────┴─────────────┴──────────────────────────────────────────────┘

serviceをcontrollerから呼び出すときはconstructorで引数を指定して呼び出す
constructor(readonly serviceクラスインスタンス変数: Serviceクラス)

@Get()、@Post()